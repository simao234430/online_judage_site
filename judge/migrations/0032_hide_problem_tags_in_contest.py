# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2016-08-01 19:52
from __future__ import unicode_literals

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import mptt.fields
import sortedm2m.fields
from django.conf import settings
from django.db import migrations, models

import judge.models


class Migration(migrations.Migration):

    dependencies = [
        ('judge', '0031_judge_versions'),
    ]

    operations = [
        migrations.AddField(
            model_name='contest',
            name='hide_problem_tags',
            field=models.BooleanField(default=False, help_text='Whether problem tags should be hidden by default.', verbose_name='hide problem tags'),
        ),
        migrations.AlterField(
            model_name='blogpost',
            name='content',
            field=models.TextField(help_text='', verbose_name='post content'),
        ),
        migrations.AlterField(
            model_name='blogpost',
            name='og_image',
            field=models.CharField(blank=True, default=b'', help_text='', max_length=150, verbose_name='openGraph image'),
        ),
        migrations.AlterField(
            model_name='blogpost',
            name='publish_on',
            field=models.DateTimeField(help_text='', verbose_name='publish after'),
        ),
        migrations.AlterField(
            model_name='blogpost',
            name='slug',
            field=models.SlugField(help_text='', verbose_name='slug'),
        ),
        migrations.AlterField(
            model_name='blogpost',
            name='sticky',
            field=models.BooleanField(default=False, help_text='', verbose_name='sticky'),
        ),
        migrations.AlterField(
            model_name='blogpost',
            name='summary',
            field=models.TextField(blank=True, help_text='', verbose_name='post summary'),
        ),
        migrations.AlterField(
            model_name='blogpost',
            name='title',
            field=models.CharField(help_text='', max_length=100, verbose_name='post title'),
        ),
        migrations.AlterField(
            model_name='blogpost',
            name='visible',
            field=models.BooleanField(default=False, help_text='', verbose_name='public visibility'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='author',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.CASCADE, to='judge.Profile', verbose_name='commenter'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='body',
            field=models.TextField(help_text='', verbose_name='body of comment'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='hidden',
            field=models.BooleanField(default=0, help_text='', verbose_name='hide the comment'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='page',
            field=models.CharField(db_index=True, help_text='', max_length=30, validators=[django.core.validators.RegexValidator(b'^[pc]:[a-z0-9]+$|^b:\\d+$|^s:', 'Page code must be ^[pc]:[a-z0-9]+$|^b:\\d+$')], verbose_name='associated Page'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, help_text='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='judge.Comment', verbose_name='parent'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='score',
            field=models.IntegerField(default=0, help_text='', verbose_name='votes'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='time',
            field=models.DateTimeField(auto_now_add=True, help_text='', verbose_name='posted time'),
        ),
        migrations.AlterField(
            model_name='comment',
            name='title',
            field=models.CharField(help_text='', max_length=200, verbose_name='title of comment'),
        ),
        migrations.AlterField(
            model_name='contest',
            name='is_external',
            field=models.BooleanField(default=False, help_text='', verbose_name='external contest'),
        ),
        migrations.AlterField(
            model_name='contest',
            name='is_private',
            field=models.BooleanField(default=False, help_text='', verbose_name='private to organizations'),
        ),
        migrations.AlterField(
            model_name='contest',
            name='is_public',
            field=models.BooleanField(default=False, help_text='Should be set even for organization-private contests, where it determines whether the contest is visible to members of the specified organizations.', verbose_name='publicly visible'),
        ),
        migrations.AlterField(
            model_name='contest',
            name='is_rated',
            field=models.BooleanField(default=False, help_text='Whether this contest can be rated.', verbose_name='contest rated'),
        ),
        migrations.AlterField(
            model_name='contest',
            name='key',
            field=models.CharField(help_text='', max_length=20, unique=True, validators=[django.core.validators.RegexValidator(b'^[a-z0-9]+$', 'Contest id must be ^[a-z0-9]+$')], verbose_name='contest id'),
        ),
        migrations.AlterField(
            model_name='contest',
            name='name',
            field=models.CharField(db_index=True, help_text='', max_length=100, verbose_name='contest name'),
        ),
        migrations.AlterField(
            model_name='contest',
            name='organizations',
            field=models.ManyToManyField(blank=True, help_text='If private, only these organizations may see the contest', to='judge.Organization', verbose_name='organizations'),
        ),
        migrations.AlterField(
            model_name='contest',
            name='problems',
            field=models.ManyToManyField(help_text='', through='judge.ContestProblem', to='judge.Problem', verbose_name='problems'),
        ),
        migrations.AlterField(
            model_name='contest',
            name='rate_all',
            field=models.BooleanField(default=False, help_text='Rate all users who joined.', verbose_name='rate all'),
        ),
        migrations.AlterField(
            model_name='contest',
            name='rate_exclude',
            field=models.ManyToManyField(blank=True, help_text='', related_name='_contest_rate_exclude_+', to='judge.Profile', verbose_name='exclude from ratings'),
        ),
        migrations.AlterField(
            model_name='contest',
            name='time_limit',
            field=models.DurationField(blank=True, help_text='', null=True, verbose_name='time limit'),
        ),
        migrations.AlterField(
            model_name='contestparticipation',
            name='contest',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.CASCADE, related_name='users', to='judge.Contest', verbose_name='associated contest'),
        ),
        migrations.AlterField(
            model_name='contestparticipation',
            name='cumtime',
            field=models.PositiveIntegerField(default=0, help_text='', verbose_name='cumulative time'),
        ),
        migrations.AlterField(
            model_name='contestparticipation',
            name='real_start',
            field=models.DateTimeField(db_column=b'start', default=django.utils.timezone.now, help_text='', verbose_name='start time'),
        ),
        migrations.AlterField(
            model_name='contestproblem',
            name='contest',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.CASCADE, related_name='contest_problems', to='judge.Contest', verbose_name='contest'),
        ),
        migrations.AlterField(
            model_name='contestproblem',
            name='order',
            field=models.PositiveIntegerField(db_index=True, help_text='', verbose_name='order'),
        ),
        migrations.AlterField(
            model_name='contestproblem',
            name='output_prefix_override',
            field=models.IntegerField(blank=True, help_text='', null=True, verbose_name='output prefix length override'),
        ),
        migrations.AlterField(
            model_name='contestproblem',
            name='partial',
            field=models.BooleanField(default=True, help_text='', verbose_name='partial'),
        ),
        migrations.AlterField(
            model_name='contestproblem',
            name='points',
            field=models.IntegerField(help_text='', verbose_name='points'),
        ),
        migrations.AlterField(
            model_name='contestproblem',
            name='problem',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.CASCADE, related_name='contests', to='judge.Problem', verbose_name='problem'),
        ),
        migrations.AlterField(
            model_name='contestsubmission',
            name='participation',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.CASCADE, related_name='submissions', related_query_name=b'submission', to='judge.ContestParticipation', verbose_name='participation'),
        ),
        migrations.AlterField(
            model_name='contestsubmission',
            name='points',
            field=models.FloatField(default=0.0, help_text='', verbose_name='points'),
        ),
        migrations.AlterField(
            model_name='contestsubmission',
            name='problem',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.CASCADE, related_name='submissions', related_query_name=b'submission', to='judge.ContestProblem', verbose_name='problem'),
        ),
        migrations.AlterField(
            model_name='contestsubmission',
            name='submission',
            field=models.OneToOneField(help_text='', on_delete=django.db.models.deletion.CASCADE, related_name='contest', to='judge.Submission', verbose_name='submission'),
        ),
        migrations.AlterField(
            model_name='judge',
            name='auth_key',
            field=models.CharField(help_text='A key to authenticated this judge', max_length=100, verbose_name='authentication key'),
        ),
        migrations.AlterField(
            model_name='judge',
            name='created',
            field=models.DateTimeField(auto_now_add=True, help_text='', verbose_name='time of creation'),
        ),
        migrations.AlterField(
            model_name='judge',
            name='description',
            field=models.TextField(blank=True, help_text='', verbose_name='description'),
        ),
        migrations.AlterField(
            model_name='judge',
            name='load',
            field=models.FloatField(help_text='Load for the last minute, divided by processors to be fair.', null=True, verbose_name='system load'),
        ),
        migrations.AlterField(
            model_name='judge',
            name='online',
            field=models.BooleanField(default=False, help_text='', verbose_name='judge online status'),
        ),
        migrations.AlterField(
            model_name='judge',
            name='ping',
            field=models.FloatField(help_text='', null=True, verbose_name='response time'),
        ),
        migrations.AlterField(
            model_name='judge',
            name='problems',
            field=models.ManyToManyField(help_text='', related_name='judges', to='judge.Problem', verbose_name='problems'),
        ),
        migrations.AlterField(
            model_name='judge',
            name='runtimes',
            field=models.ManyToManyField(help_text='', related_name='judges', to='judge.Language', verbose_name='judges'),
        ),
        migrations.AlterField(
            model_name='judge',
            name='start_time',
            field=models.DateTimeField(help_text='', null=True, verbose_name='judge start time'),
        ),
        migrations.AlterField(
            model_name='languagelimit',
            name='language',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.CASCADE, to='judge.Language', verbose_name='language'),
        ),
        migrations.AlterField(
            model_name='languagelimit',
            name='memory_limit',
            field=models.IntegerField(help_text='', verbose_name='memory limit'),
        ),
        migrations.AlterField(
            model_name='languagelimit',
            name='problem',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.CASCADE, related_name='language_limits', to='judge.Problem', verbose_name='problem'),
        ),
        migrations.AlterField(
            model_name='languagelimit',
            name='time_limit',
            field=models.FloatField(help_text='', verbose_name='time limit'),
        ),
        migrations.AlterField(
            model_name='license',
            name='display',
            field=models.CharField(blank=True, help_text='Displayed on pages under this license', max_length=256, verbose_name='short name'),
        ),
        migrations.AlterField(
            model_name='license',
            name='icon',
            field=models.CharField(blank=True, help_text='URL to the icon', max_length=256, verbose_name='icon'),
        ),
        migrations.AlterField(
            model_name='license',
            name='key',
            field=models.CharField(help_text='', max_length=20, unique=True, validators=[django.core.validators.RegexValidator(b'^[-\\w.]+$', b'License key must be ^[-\\w.]+$')], verbose_name='key'),
        ),
        migrations.AlterField(
            model_name='license',
            name='link',
            field=models.CharField(help_text='', max_length=256, verbose_name='link'),
        ),
        migrations.AlterField(
            model_name='license',
            name='name',
            field=models.CharField(help_text='', max_length=256, verbose_name='full name'),
        ),
        migrations.AlterField(
            model_name='license',
            name='text',
            field=models.TextField(help_text='', verbose_name='license text'),
        ),
        migrations.AlterField(
            model_name='navigationbar',
            name='key',
            field=models.CharField(help_text='', max_length=10, unique=True, verbose_name='identifier'),
        ),
        migrations.AlterField(
            model_name='navigationbar',
            name='label',
            field=models.CharField(help_text='', max_length=20, verbose_name='label'),
        ),
        migrations.AlterField(
            model_name='navigationbar',
            name='order',
            field=models.PositiveIntegerField(db_index=True, help_text='', verbose_name='order'),
        ),
        migrations.AlterField(
            model_name='navigationbar',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, help_text='', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='judge.NavigationBar', verbose_name='parent item'),
        ),
        migrations.AlterField(
            model_name='navigationbar',
            name='path',
            field=models.CharField(help_text='', max_length=255, verbose_name='link path'),
        ),
        migrations.AlterField(
            model_name='navigationbar',
            name='regex',
            field=models.TextField(help_text='', validators=[judge.models.validate_regex], verbose_name='highlight regex'),
        ),
        migrations.AlterField(
            model_name='organization',
            name='about',
            field=models.TextField(help_text='', verbose_name='organization description'),
        ),
        migrations.AlterField(
            model_name='organization',
            name='admins',
            field=models.ManyToManyField(help_text='Those who can edit this organization', related_name='_organization_admins_+', to='judge.Profile', verbose_name='administrators'),
        ),
        migrations.AlterField(
            model_name='organization',
            name='creation_date',
            field=models.DateTimeField(auto_now_add=True, help_text='', verbose_name='creation date'),
        ),
        migrations.AlterField(
            model_name='organization',
            name='key',
            field=models.CharField(help_text='Organization name shows in URL', max_length=6, unique=True, validators=[django.core.validators.RegexValidator(b'^[A-Za-z0-9]+$', b'Identifier must contain letters and numbers only')], verbose_name='identifier'),
        ),
        migrations.AlterField(
            model_name='organization',
            name='name',
            field=models.CharField(help_text='', max_length=50, verbose_name='organization title'),
        ),
        migrations.AlterField(
            model_name='organization',
            name='registrant',
            field=models.ForeignKey(help_text='User who registered this organization', on_delete=django.db.models.deletion.CASCADE, related_name='registrant+', to='judge.Profile', verbose_name='registrant'),
        ),
        migrations.AlterField(
            model_name='organization',
            name='short_name',
            field=models.CharField(help_text='Displayed beside user name during contests', max_length=20, verbose_name='short name'),
        ),
        migrations.AlterField(
            model_name='organizationrequest',
            name='organization',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='judge.Organization', verbose_name='organization'),
        ),
        migrations.AlterField(
            model_name='organizationrequest',
            name='reason',
            field=models.TextField(help_text='', verbose_name='reason'),
        ),
        migrations.AlterField(
            model_name='organizationrequest',
            name='state',
            field=models.CharField(choices=[(b'P', b'Pending'), (b'A', b'Approved'), (b'R', b'Rejected')], help_text='', max_length=1, verbose_name='state'),
        ),
        migrations.AlterField(
            model_name='organizationrequest',
            name='time',
            field=models.DateTimeField(auto_now_add=True, help_text='', verbose_name='request time'),
        ),
        migrations.AlterField(
            model_name='organizationrequest',
            name='user',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='judge.Profile', verbose_name='user'),
        ),
        migrations.AlterField(
            model_name='privatemessage',
            name='content',
            field=models.TextField(help_text='', verbose_name='message body'),
        ),
        migrations.AlterField(
            model_name='privatemessage',
            name='read',
            field=models.BooleanField(default=False, help_text='', verbose_name='read'),
        ),
        migrations.AlterField(
            model_name='privatemessage',
            name='sender',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='judge.Profile', verbose_name='sender'),
        ),
        migrations.AlterField(
            model_name='privatemessage',
            name='target',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to='judge.Profile', verbose_name='target'),
        ),
        migrations.AlterField(
            model_name='privatemessage',
            name='timestamp',
            field=models.DateTimeField(auto_now_add=True, help_text='', verbose_name='message timestamp'),
        ),
        migrations.AlterField(
            model_name='privatemessage',
            name='title',
            field=models.CharField(help_text='', max_length=50, verbose_name='message title'),
        ),
        migrations.AlterField(
            model_name='privatemessagethread',
            name='messages',
            field=models.ManyToManyField(help_text='', to='judge.PrivateMessage', verbose_name='messages in the thread'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='allowed_languages',
            field=models.ManyToManyField(help_text='', to='judge.Language', verbose_name='allowed languages'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='authors',
            field=models.ManyToManyField(blank=True, help_text='', related_name='authored_problems', to='judge.Profile', verbose_name='creators'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='banned_users',
            field=models.ManyToManyField(blank=True, help_text='Bans the selected users from submitting to this problem', to='judge.Profile', verbose_name='personae non gratae'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='code',
            field=models.CharField(help_text='', max_length=20, unique=True, validators=[django.core.validators.RegexValidator(b'^[a-z0-9]+$', 'Problem code must be ^[a-z0-9]+$')], verbose_name='problem code'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='date',
            field=models.DateTimeField(blank=True, db_index=True, help_text=b"Doesn't have magic ability to auto-publish due to backward compatibility", null=True, verbose_name='date of publishing'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='description',
            field=models.TextField(help_text='', verbose_name='problem body'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='group',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.CASCADE, to='judge.ProblemGroup', verbose_name='problem group'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='is_public',
            field=models.BooleanField(db_index=True, default=False, help_text='', verbose_name='publicly visible'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='memory_limit',
            field=models.IntegerField(help_text='', verbose_name='memory limit'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='name',
            field=models.CharField(db_index=True, help_text='', max_length=100, verbose_name='problem name'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='partial',
            field=models.BooleanField(default=False, help_text='', verbose_name='allows partial points'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='points',
            field=models.FloatField(help_text='', verbose_name='points'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='time_limit',
            field=models.FloatField(help_text='', verbose_name='time limit'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='types',
            field=models.ManyToManyField(help_text='', to='judge.ProblemType', verbose_name='problem types'),
        ),
        migrations.AlterField(
            model_name='problemgroup',
            name='full_name',
            field=models.CharField(help_text='', max_length=100, verbose_name='problem group name'),
        ),
        migrations.AlterField(
            model_name='problemgroup',
            name='name',
            field=models.CharField(help_text='', max_length=20, unique=True, verbose_name='problem group ID'),
        ),
        migrations.AlterField(
            model_name='problemtype',
            name='full_name',
            field=models.CharField(help_text='', max_length=100, verbose_name='problem category name'),
        ),
        migrations.AlterField(
            model_name='problemtype',
            name='name',
            field=models.CharField(help_text='', max_length=20, unique=True, verbose_name='problem category ID'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='about',
            field=models.TextField(blank=True, help_text='', null=True, verbose_name='self-description'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='current_contest',
            field=models.OneToOneField(blank=True, help_text='', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='judge.ContestParticipation', verbose_name='current contest'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='display_rank',
            field=models.CharField(choices=[(b'user', b'Normal User'), (b'setter', b'Problem Setter'), (b'admin', b'Admin')], default=b'user', help_text='', max_length=10, verbose_name='display rank'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='ip',
            field=models.GenericIPAddressField(blank=True, help_text='', null=True, verbose_name='last IP'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='language',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.CASCADE, to='judge.Language', verbose_name='preferred language'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='last_access',
            field=models.DateTimeField(default=django.utils.timezone.now, help_text='', verbose_name='last access time'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='mute',
            field=models.BooleanField(default=False, help_text='Some users are at their best when silent.', verbose_name='comment mute'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='name',
            field=models.CharField(blank=True, help_text='', max_length=50, null=True, verbose_name='display name'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='organizations',
            field=sortedm2m.fields.SortedManyToManyField(blank=True, help_text=None, related_name='members', related_query_name=b'member', to='judge.Organization', verbose_name='organization'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='timezone',
            field=models.CharField(choices=[(b'Africa', [(b'Africa/Abidjan', b'Abidjan'), (b'Africa/Accra', b'Accra'), (b'Africa/Addis_Ababa', b'Addis_Ababa'), (b'Africa/Algiers', b'Algiers'), (b'Africa/Asmara', b'Asmara'), (b'Africa/Asmera', b'Asmera'), (b'Africa/Bamako', b'Bamako'), (b'Africa/Bangui', b'Bangui'), (b'Africa/Banjul', b'Banjul'), (b'Africa/Bissau', b'Bissau'), (b'Africa/Blantyre', b'Blantyre'), (b'Africa/Brazzaville', b'Brazzaville'), (b'Africa/Bujumbura', b'Bujumbura'), (b'Africa/Cairo', b'Cairo'), (b'Africa/Casablanca', b'Casablanca'), (b'Africa/Ceuta', b'Ceuta'), (b'Africa/Conakry', b'Conakry'), (b'Africa/Dakar', b'Dakar'), (b'Africa/Dar_es_Salaam', b'Dar_es_Salaam'), (b'Africa/Djibouti', b'Djibouti'), (b'Africa/Douala', b'Douala'), (b'Africa/El_Aaiun', b'El_Aaiun'), (b'Africa/Freetown', b'Freetown'), (b'Africa/Gaborone', b'Gaborone'), (b'Africa/Harare', b'Harare'), (b'Africa/Johannesburg', b'Johannesburg'), (b'Africa/Juba', b'Juba'), (b'Africa/Kampala', b'Kampala'), (b'Africa/Khartoum', b'Khartoum'), (b'Africa/Kigali', b'Kigali'), (b'Africa/Kinshasa', b'Kinshasa'), (b'Africa/Lagos', b'Lagos'), (b'Africa/Libreville', b'Libreville'), (b'Africa/Lome', b'Lome'), (b'Africa/Luanda', b'Luanda'), (b'Africa/Lubumbashi', b'Lubumbashi'), (b'Africa/Lusaka', b'Lusaka'), (b'Africa/Malabo', b'Malabo'), (b'Africa/Maputo', b'Maputo'), (b'Africa/Maseru', b'Maseru'), (b'Africa/Mbabane', b'Mbabane'), (b'Africa/Mogadishu', b'Mogadishu'), (b'Africa/Monrovia', b'Monrovia'), (b'Africa/Nairobi', b'Nairobi'), (b'Africa/Ndjamena', b'Ndjamena'), (b'Africa/Niamey', b'Niamey'), (b'Africa/Nouakchott', b'Nouakchott'), (b'Africa/Ouagadougou', b'Ouagadougou'), (b'Africa/Porto-Novo', b'Porto-Novo'), (b'Africa/Sao_Tome', b'Sao_Tome'), (b'Africa/Timbuktu', b'Timbuktu'), (b'Africa/Tripoli', b'Tripoli'), (b'Africa/Tunis', b'Tunis'), (b'Africa/Windhoek', b'Windhoek')]), (b'America', [(b'America/Adak', b'Adak'), (b'America/Anchorage', b'Anchorage'), (b'America/Anguilla', b'Anguilla'), (b'America/Antigua', b'Antigua'), (b'America/Araguaina', b'Araguaina'), (b'America/Argentina/Buenos_Aires', b'Argentina/Buenos_Aires'), (b'America/Argentina/Catamarca', b'Argentina/Catamarca'), (b'America/Argentina/ComodRivadavia', b'Argentina/ComodRivadavia'), (b'America/Argentina/Cordoba', b'Argentina/Cordoba'), (b'America/Argentina/Jujuy', b'Argentina/Jujuy'), (b'America/Argentina/La_Rioja', b'Argentina/La_Rioja'), (b'America/Argentina/Mendoza', b'Argentina/Mendoza'), (b'America/Argentina/Rio_Gallegos', b'Argentina/Rio_Gallegos'), (b'America/Argentina/Salta', b'Argentina/Salta'), (b'America/Argentina/San_Juan', b'Argentina/San_Juan'), (b'America/Argentina/San_Luis', b'Argentina/San_Luis'), (b'America/Argentina/Tucuman', b'Argentina/Tucuman'), (b'America/Argentina/Ushuaia', b'Argentina/Ushuaia'), (b'America/Aruba', b'Aruba'), (b'America/Asuncion', b'Asuncion'), (b'America/Atikokan', b'Atikokan'), (b'America/Atka', b'Atka'), (b'America/Bahia', b'Bahia'), (b'America/Bahia_Banderas', b'Bahia_Banderas'), (b'America/Barbados', b'Barbados'), (b'America/Belem', b'Belem'), (b'America/Belize', b'Belize'), (b'America/Blanc-Sablon', b'Blanc-Sablon'), (b'America/Boa_Vista', b'Boa_Vista'), (b'America/Bogota', b'Bogota'), (b'America/Boise', b'Boise'), (b'America/Buenos_Aires', b'Buenos_Aires'), (b'America/Cambridge_Bay', b'Cambridge_Bay'), (b'America/Campo_Grande', b'Campo_Grande'), (b'America/Cancun', b'Cancun'), (b'America/Caracas', b'Caracas'), (b'America/Catamarca', b'Catamarca'), (b'America/Cayenne', b'Cayenne'), (b'America/Cayman', b'Cayman'), (b'America/Chicago', b'Chicago'), (b'America/Chihuahua', b'Chihuahua'), (b'America/Coral_Harbour', b'Coral_Harbour'), (b'America/Cordoba', b'Cordoba'), (b'America/Costa_Rica', b'Costa_Rica'), (b'America/Creston', b'Creston'), (b'America/Cuiaba', b'Cuiaba'), (b'America/Curacao', b'Curacao'), (b'America/Danmarkshavn', b'Danmarkshavn'), (b'America/Dawson', b'Dawson'), (b'America/Dawson_Creek', b'Dawson_Creek'), (b'America/Denver', b'Denver'), (b'America/Detroit', b'Detroit'), (b'America/Dominica', b'Dominica'), (b'America/Edmonton', b'Edmonton'), (b'America/Eirunepe', b'Eirunepe'), (b'America/El_Salvador', b'El_Salvador'), (b'America/Ensenada', b'Ensenada'), (b'America/Fort_Nelson', b'Fort_Nelson'), (b'America/Fort_Wayne', b'Fort_Wayne'), (b'America/Fortaleza', b'Fortaleza'), (b'America/Glace_Bay', b'Glace_Bay'), (b'America/Godthab', b'Godthab'), (b'America/Goose_Bay', b'Goose_Bay'), (b'America/Grand_Turk', b'Grand_Turk'), (b'America/Grenada', b'Grenada'), (b'America/Guadeloupe', b'Guadeloupe'), (b'America/Guatemala', b'Guatemala'), (b'America/Guayaquil', b'Guayaquil'), (b'America/Guyana', b'Guyana'), (b'America/Halifax', b'Halifax'), (b'America/Havana', b'Havana'), (b'America/Hermosillo', b'Hermosillo'), (b'America/Indiana/Indianapolis', b'Indiana/Indianapolis'), (b'America/Indiana/Knox', b'Indiana/Knox'), (b'America/Indiana/Marengo', b'Indiana/Marengo'), (b'America/Indiana/Petersburg', b'Indiana/Petersburg'), (b'America/Indiana/Tell_City', b'Indiana/Tell_City'), (b'America/Indiana/Vevay', b'Indiana/Vevay'), (b'America/Indiana/Vincennes', b'Indiana/Vincennes'), (b'America/Indiana/Winamac', b'Indiana/Winamac'), (b'America/Indianapolis', b'Indianapolis'), (b'America/Inuvik', b'Inuvik'), (b'America/Iqaluit', b'Iqaluit'), (b'America/Jamaica', b'Jamaica'), (b'America/Jujuy', b'Jujuy'), (b'America/Juneau', b'Juneau'), (b'America/Kentucky/Louisville', b'Kentucky/Louisville'), (b'America/Kentucky/Monticello', b'Kentucky/Monticello'), (b'America/Knox_IN', b'Knox_IN'), (b'America/Kralendijk', b'Kralendijk'), (b'America/La_Paz', b'La_Paz'), (b'America/Lima', b'Lima'), (b'America/Los_Angeles', b'Los_Angeles'), (b'America/Louisville', b'Louisville'), (b'America/Lower_Princes', b'Lower_Princes'), (b'America/Maceio', b'Maceio'), (b'America/Managua', b'Managua'), (b'America/Manaus', b'Manaus'), (b'America/Marigot', b'Marigot'), (b'America/Martinique', b'Martinique'), (b'America/Matamoros', b'Matamoros'), (b'America/Mazatlan', b'Mazatlan'), (b'America/Mendoza', b'Mendoza'), (b'America/Menominee', b'Menominee'), (b'America/Merida', b'Merida'), (b'America/Metlakatla', b'Metlakatla'), (b'America/Mexico_City', b'Mexico_City'), (b'America/Miquelon', b'Miquelon'), (b'America/Moncton', b'Moncton'), (b'America/Monterrey', b'Monterrey'), (b'America/Montevideo', b'Montevideo'), (b'America/Montreal', b'Montreal'), (b'America/Montserrat', b'Montserrat'), (b'America/Nassau', b'Nassau'), (b'America/New_York', b'New_York'), (b'America/Nipigon', b'Nipigon'), (b'America/Nome', b'Nome'), (b'America/Noronha', b'Noronha'), (b'America/North_Dakota/Beulah', b'North_Dakota/Beulah'), (b'America/North_Dakota/Center', b'North_Dakota/Center'), (b'America/North_Dakota/New_Salem', b'North_Dakota/New_Salem'), (b'America/Ojinaga', b'Ojinaga'), (b'America/Panama', b'Panama'), (b'America/Pangnirtung', b'Pangnirtung'), (b'America/Paramaribo', b'Paramaribo'), (b'America/Phoenix', b'Phoenix'), (b'America/Port-au-Prince', b'Port-au-Prince'), (b'America/Port_of_Spain', b'Port_of_Spain'), (b'America/Porto_Acre', b'Porto_Acre'), (b'America/Porto_Velho', b'Porto_Velho'), (b'America/Puerto_Rico', b'Puerto_Rico'), (b'America/Rainy_River', b'Rainy_River'), (b'America/Rankin_Inlet', b'Rankin_Inlet'), (b'America/Recife', b'Recife'), (b'America/Regina', b'Regina'), (b'America/Resolute', b'Resolute'), (b'America/Rio_Branco', b'Rio_Branco'), (b'America/Rosario', b'Rosario'), (b'America/Santa_Isabel', b'Santa_Isabel'), (b'America/Santarem', b'Santarem'), (b'America/Santiago', b'Santiago'), (b'America/Santo_Domingo', b'Santo_Domingo'), (b'America/Sao_Paulo', b'Sao_Paulo'), (b'America/Scoresbysund', b'Scoresbysund'), (b'America/Shiprock', b'Shiprock'), (b'America/Sitka', b'Sitka'), (b'America/St_Barthelemy', b'St_Barthelemy'), (b'America/St_Johns', b'St_Johns'), (b'America/St_Kitts', b'St_Kitts'), (b'America/St_Lucia', b'St_Lucia'), (b'America/St_Thomas', b'St_Thomas'), (b'America/St_Vincent', b'St_Vincent'), (b'America/Swift_Current', b'Swift_Current'), (b'America/Tegucigalpa', b'Tegucigalpa'), (b'America/Thule', b'Thule'), (b'America/Thunder_Bay', b'Thunder_Bay'), (b'America/Tijuana', b'Tijuana'), (b'America/Toronto', b'Toronto'), (b'America/Tortola', b'Tortola'), (b'America/Vancouver', b'Vancouver'), (b'America/Virgin', b'Virgin'), (b'America/Whitehorse', b'Whitehorse'), (b'America/Winnipeg', b'Winnipeg'), (b'America/Yakutat', b'Yakutat'), (b'America/Yellowknife', b'Yellowknife')]), (b'Antarctica', [(b'Antarctica/Casey', b'Casey'), (b'Antarctica/Davis', b'Davis'), (b'Antarctica/DumontDUrville', b'DumontDUrville'), (b'Antarctica/Macquarie', b'Macquarie'), (b'Antarctica/Mawson', b'Mawson'), (b'Antarctica/McMurdo', b'McMurdo'), (b'Antarctica/Palmer', b'Palmer'), (b'Antarctica/Rothera', b'Rothera'), (b'Antarctica/South_Pole', b'South_Pole'), (b'Antarctica/Syowa', b'Syowa'), (b'Antarctica/Troll', b'Troll'), (b'Antarctica/Vostok', b'Vostok')]), (b'Arctic', [(b'Arctic/Longyearbyen', b'Longyearbyen')]), (b'Asia', [(b'Asia/Aden', b'Aden'), (b'Asia/Almaty', b'Almaty'), (b'Asia/Amman', b'Amman'), (b'Asia/Anadyr', b'Anadyr'), (b'Asia/Aqtau', b'Aqtau'), (b'Asia/Aqtobe', b'Aqtobe'), (b'Asia/Ashgabat', b'Ashgabat'), (b'Asia/Ashkhabad', b'Ashkhabad'), (b'Asia/Baghdad', b'Baghdad'), (b'Asia/Bahrain', b'Bahrain'), (b'Asia/Baku', b'Baku'), (b'Asia/Bangkok', b'Bangkok'), (b'Asia/Barnaul', b'Barnaul'), (b'Asia/Beirut', b'Beirut'), (b'Asia/Bishkek', b'Bishkek'), (b'Asia/Brunei', b'Brunei'), (b'Asia/Calcutta', b'Calcutta'), (b'Asia/Chita', b'Chita'), (b'Asia/Choibalsan', b'Choibalsan'), (b'Asia/Chongqing', b'Chongqing'), (b'Asia/Chungking', b'Chungking'), (b'Asia/Colombo', b'Colombo'), (b'Asia/Dacca', b'Dacca'), (b'Asia/Damascus', b'Damascus'), (b'Asia/Dhaka', b'Dhaka'), (b'Asia/Dili', b'Dili'), (b'Asia/Dubai', b'Dubai'), (b'Asia/Dushanbe', b'Dushanbe'), (b'Asia/Gaza', b'Gaza'), (b'Asia/Harbin', b'Harbin'), (b'Asia/Hebron', b'Hebron'), (b'Asia/Ho_Chi_Minh', b'Ho_Chi_Minh'), (b'Asia/Hong_Kong', b'Hong_Kong'), (b'Asia/Hovd', b'Hovd'), (b'Asia/Irkutsk', b'Irkutsk'), (b'Asia/Istanbul', b'Istanbul'), (b'Asia/Jakarta', b'Jakarta'), (b'Asia/Jayapura', b'Jayapura'), (b'Asia/Jerusalem', b'Jerusalem'), (b'Asia/Kabul', b'Kabul'), (b'Asia/Kamchatka', b'Kamchatka'), (b'Asia/Karachi', b'Karachi'), (b'Asia/Kashgar', b'Kashgar'), (b'Asia/Kathmandu', b'Kathmandu'), (b'Asia/Katmandu', b'Katmandu'), (b'Asia/Khandyga', b'Khandyga'), (b'Asia/Kolkata', b'Kolkata'), (b'Asia/Krasnoyarsk', b'Krasnoyarsk'), (b'Asia/Kuala_Lumpur', b'Kuala_Lumpur'), (b'Asia/Kuching', b'Kuching'), (b'Asia/Kuwait', b'Kuwait'), (b'Asia/Macao', b'Macao'), (b'Asia/Macau', b'Macau'), (b'Asia/Magadan', b'Magadan'), (b'Asia/Makassar', b'Makassar'), (b'Asia/Manila', b'Manila'), (b'Asia/Muscat', b'Muscat'), (b'Asia/Nicosia', b'Nicosia'), (b'Asia/Novokuznetsk', b'Novokuznetsk'), (b'Asia/Novosibirsk', b'Novosibirsk'), (b'Asia/Omsk', b'Omsk'), (b'Asia/Oral', b'Oral'), (b'Asia/Phnom_Penh', b'Phnom_Penh'), (b'Asia/Pontianak', b'Pontianak'), (b'Asia/Pyongyang', b'Pyongyang'), (b'Asia/Qatar', b'Qatar'), (b'Asia/Qyzylorda', b'Qyzylorda'), (b'Asia/Rangoon', b'Rangoon'), (b'Asia/Riyadh', b'Riyadh'), (b'Asia/Saigon', b'Saigon'), (b'Asia/Sakhalin', b'Sakhalin'), (b'Asia/Samarkand', b'Samarkand'), (b'Asia/Seoul', b'Seoul'), (b'Asia/Shanghai', b'Shanghai'), (b'Asia/Singapore', b'Singapore'), (b'Asia/Srednekolymsk', b'Srednekolymsk'), (b'Asia/Taipei', b'Taipei'), (b'Asia/Tashkent', b'Tashkent'), (b'Asia/Tbilisi', b'Tbilisi'), (b'Asia/Tehran', b'Tehran'), (b'Asia/Tel_Aviv', b'Tel_Aviv'), (b'Asia/Thimbu', b'Thimbu'), (b'Asia/Thimphu', b'Thimphu'), (b'Asia/Tokyo', b'Tokyo'), (b'Asia/Tomsk', b'Tomsk'), (b'Asia/Ujung_Pandang', b'Ujung_Pandang'), (b'Asia/Ulaanbaatar', b'Ulaanbaatar'), (b'Asia/Ulan_Bator', b'Ulan_Bator'), (b'Asia/Urumqi', b'Urumqi'), (b'Asia/Ust-Nera', b'Ust-Nera'), (b'Asia/Vientiane', b'Vientiane'), (b'Asia/Vladivostok', b'Vladivostok'), (b'Asia/Yakutsk', b'Yakutsk'), (b'Asia/Yekaterinburg', b'Yekaterinburg'), (b'Asia/Yerevan', b'Yerevan')]), (b'Atlantic', [(b'Atlantic/Azores', b'Azores'), (b'Atlantic/Bermuda', b'Bermuda'), (b'Atlantic/Canary', b'Canary'), (b'Atlantic/Cape_Verde', b'Cape_Verde'), (b'Atlantic/Faeroe', b'Faeroe'), (b'Atlantic/Faroe', b'Faroe'), (b'Atlantic/Jan_Mayen', b'Jan_Mayen'), (b'Atlantic/Madeira', b'Madeira'), (b'Atlantic/Reykjavik', b'Reykjavik'), (b'Atlantic/South_Georgia', b'South_Georgia'), (b'Atlantic/St_Helena', b'St_Helena'), (b'Atlantic/Stanley', b'Stanley')]), (b'Australia', [(b'Australia/ACT', b'ACT'), (b'Australia/Adelaide', b'Adelaide'), (b'Australia/Brisbane', b'Brisbane'), (b'Australia/Broken_Hill', b'Broken_Hill'), (b'Australia/Canberra', b'Canberra'), (b'Australia/Currie', b'Currie'), (b'Australia/Darwin', b'Darwin'), (b'Australia/Eucla', b'Eucla'), (b'Australia/Hobart', b'Hobart'), (b'Australia/LHI', b'LHI'), (b'Australia/Lindeman', b'Lindeman'), (b'Australia/Lord_Howe', b'Lord_Howe'), (b'Australia/Melbourne', b'Melbourne'), (b'Australia/NSW', b'NSW'), (b'Australia/North', b'North'), (b'Australia/Perth', b'Perth'), (b'Australia/Queensland', b'Queensland'), (b'Australia/South', b'South'), (b'Australia/Sydney', b'Sydney'), (b'Australia/Tasmania', b'Tasmania'), (b'Australia/Victoria', b'Victoria'), (b'Australia/West', b'West'), (b'Australia/Yancowinna', b'Yancowinna')]), (b'Brazil', [(b'Brazil/Acre', b'Acre'), (b'Brazil/DeNoronha', b'DeNoronha'), (b'Brazil/East', b'East'), (b'Brazil/West', b'West')]), (b'Canada', [(b'Canada/Atlantic', b'Atlantic'), (b'Canada/Central', b'Central'), (b'Canada/East-Saskatchewan', b'East-Saskatchewan'), (b'Canada/Eastern', b'Eastern'), (b'Canada/Mountain', b'Mountain'), (b'Canada/Newfoundland', b'Newfoundland'), (b'Canada/Pacific', b'Pacific'), (b'Canada/Saskatchewan', b'Saskatchewan'), (b'Canada/Yukon', b'Yukon')]), (b'Chile', [(b'Chile/Continental', b'Continental'), (b'Chile/EasterIsland', b'EasterIsland')]), (b'Etc', [(b'Etc/Greenwich', b'Greenwich'), (b'Etc/UCT', b'UCT'), (b'Etc/UTC', b'UTC'), (b'Etc/Universal', b'Universal'), (b'Etc/Zulu', b'Zulu')]), (b'Europe', [(b'Europe/Amsterdam', b'Amsterdam'), (b'Europe/Andorra', b'Andorra'), (b'Europe/Astrakhan', b'Astrakhan'), (b'Europe/Athens', b'Athens'), (b'Europe/Belfast', b'Belfast'), (b'Europe/Belgrade', b'Belgrade'), (b'Europe/Berlin', b'Berlin'), (b'Europe/Bratislava', b'Bratislava'), (b'Europe/Brussels', b'Brussels'), (b'Europe/Bucharest', b'Bucharest'), (b'Europe/Budapest', b'Budapest'), (b'Europe/Busingen', b'Busingen'), (b'Europe/Chisinau', b'Chisinau'), (b'Europe/Copenhagen', b'Copenhagen'), (b'Europe/Dublin', b'Dublin'), (b'Europe/Gibraltar', b'Gibraltar'), (b'Europe/Guernsey', b'Guernsey'), (b'Europe/Helsinki', b'Helsinki'), (b'Europe/Isle_of_Man', b'Isle_of_Man'), (b'Europe/Istanbul', b'Istanbul'), (b'Europe/Jersey', b'Jersey'), (b'Europe/Kaliningrad', b'Kaliningrad'), (b'Europe/Kiev', b'Kiev'), (b'Europe/Kirov', b'Kirov'), (b'Europe/Lisbon', b'Lisbon'), (b'Europe/Ljubljana', b'Ljubljana'), (b'Europe/London', b'London'), (b'Europe/Luxembourg', b'Luxembourg'), (b'Europe/Madrid', b'Madrid'), (b'Europe/Malta', b'Malta'), (b'Europe/Mariehamn', b'Mariehamn'), (b'Europe/Minsk', b'Minsk'), (b'Europe/Monaco', b'Monaco'), (b'Europe/Moscow', b'Moscow'), (b'Europe/Nicosia', b'Nicosia'), (b'Europe/Oslo', b'Oslo'), (b'Europe/Paris', b'Paris'), (b'Europe/Podgorica', b'Podgorica'), (b'Europe/Prague', b'Prague'), (b'Europe/Riga', b'Riga'), (b'Europe/Rome', b'Rome'), (b'Europe/Samara', b'Samara'), (b'Europe/San_Marino', b'San_Marino'), (b'Europe/Sarajevo', b'Sarajevo'), (b'Europe/Simferopol', b'Simferopol'), (b'Europe/Skopje', b'Skopje'), (b'Europe/Sofia', b'Sofia'), (b'Europe/Stockholm', b'Stockholm'), (b'Europe/Tallinn', b'Tallinn'), (b'Europe/Tirane', b'Tirane'), (b'Europe/Tiraspol', b'Tiraspol'), (b'Europe/Ulyanovsk', b'Ulyanovsk'), (b'Europe/Uzhgorod', b'Uzhgorod'), (b'Europe/Vaduz', b'Vaduz'), (b'Europe/Vatican', b'Vatican'), (b'Europe/Vienna', b'Vienna'), (b'Europe/Vilnius', b'Vilnius'), (b'Europe/Volgograd', b'Volgograd'), (b'Europe/Warsaw', b'Warsaw'), (b'Europe/Zagreb', b'Zagreb'), (b'Europe/Zaporozhye', b'Zaporozhye'), (b'Europe/Zurich', b'Zurich')]), (b'Indian', [(b'Indian/Antananarivo', b'Antananarivo'), (b'Indian/Chagos', b'Chagos'), (b'Indian/Christmas', b'Christmas'), (b'Indian/Cocos', b'Cocos'), (b'Indian/Comoro', b'Comoro'), (b'Indian/Kerguelen', b'Kerguelen'), (b'Indian/Mahe', b'Mahe'), (b'Indian/Maldives', b'Maldives'), (b'Indian/Mauritius', b'Mauritius'), (b'Indian/Mayotte', b'Mayotte'), (b'Indian/Reunion', b'Reunion')]), (b'Mexico', [(b'Mexico/BajaNorte', b'BajaNorte'), (b'Mexico/BajaSur', b'BajaSur'), (b'Mexico/General', b'General')]), (b'Other', [(b'CET', b'CET'), (b'CST6CDT', b'CST6CDT'), (b'Cuba', b'Cuba'), (b'EET', b'EET'), (b'EST', b'EST'), (b'EST5EDT', b'EST5EDT'), (b'Egypt', b'Egypt'), (b'Eire', b'Eire'), (b'GB', b'GB'), (b'GB-Eire', b'GB-Eire'), (b'Greenwich', b'Greenwich'), (b'HST', b'HST'), (b'Hongkong', b'Hongkong'), (b'Iceland', b'Iceland'), (b'Iran', b'Iran'), (b'Israel', b'Israel'), (b'Jamaica', b'Jamaica'), (b'Japan', b'Japan'), (b'Kwajalein', b'Kwajalein'), (b'Libya', b'Libya'), (b'MET', b'MET'), (b'MST', b'MST'), (b'MST7MDT', b'MST7MDT'), (b'NZ', b'NZ'), (b'NZ-CHAT', b'NZ-CHAT'), (b'Navajo', b'Navajo'), (b'PRC', b'PRC'), (b'PST8PDT', b'PST8PDT'), (b'Poland', b'Poland'), (b'Portugal', b'Portugal'), (b'ROC', b'ROC'), (b'ROK', b'ROK'), (b'Singapore', b'Singapore'), (b'Turkey', b'Turkey'), (b'UCT', b'UCT'), (b'UTC', b'UTC'), (b'Universal', b'Universal'), (b'W-SU', b'W-SU'), (b'WET', b'WET'), (b'Zulu', b'Zulu')]), (b'Pacific', [(b'Pacific/Apia', b'Apia'), (b'Pacific/Auckland', b'Auckland'), (b'Pacific/Bougainville', b'Bougainville'), (b'Pacific/Chatham', b'Chatham'), (b'Pacific/Chuuk', b'Chuuk'), (b'Pacific/Easter', b'Easter'), (b'Pacific/Efate', b'Efate'), (b'Pacific/Enderbury', b'Enderbury'), (b'Pacific/Fakaofo', b'Fakaofo'), (b'Pacific/Fiji', b'Fiji'), (b'Pacific/Funafuti', b'Funafuti'), (b'Pacific/Galapagos', b'Galapagos'), (b'Pacific/Gambier', b'Gambier'), (b'Pacific/Guadalcanal', b'Guadalcanal'), (b'Pacific/Guam', b'Guam'), (b'Pacific/Honolulu', b'Honolulu'), (b'Pacific/Johnston', b'Johnston'), (b'Pacific/Kiritimati', b'Kiritimati'), (b'Pacific/Kosrae', b'Kosrae'), (b'Pacific/Kwajalein', b'Kwajalein'), (b'Pacific/Majuro', b'Majuro'), (b'Pacific/Marquesas', b'Marquesas'), (b'Pacific/Midway', b'Midway'), (b'Pacific/Nauru', b'Nauru'), (b'Pacific/Niue', b'Niue'), (b'Pacific/Norfolk', b'Norfolk'), (b'Pacific/Noumea', b'Noumea'), (b'Pacific/Pago_Pago', b'Pago_Pago'), (b'Pacific/Palau', b'Palau'), (b'Pacific/Pitcairn', b'Pitcairn'), (b'Pacific/Pohnpei', b'Pohnpei'), (b'Pacific/Ponape', b'Ponape'), (b'Pacific/Port_Moresby', b'Port_Moresby'), (b'Pacific/Rarotonga', b'Rarotonga'), (b'Pacific/Saipan', b'Saipan'), (b'Pacific/Samoa', b'Samoa'), (b'Pacific/Tahiti', b'Tahiti'), (b'Pacific/Tarawa', b'Tarawa'), (b'Pacific/Tongatapu', b'Tongatapu'), (b'Pacific/Truk', b'Truk'), (b'Pacific/Wake', b'Wake'), (b'Pacific/Wallis', b'Wallis'), (b'Pacific/Yap', b'Yap')]), (b'US', [(b'US/Alaska', b'Alaska'), (b'US/Aleutian', b'Aleutian'), (b'US/Arizona', b'Arizona'), (b'US/Central', b'Central'), (b'US/East-Indiana', b'East-Indiana'), (b'US/Eastern', b'Eastern'), (b'US/Hawaii', b'Hawaii'), (b'US/Indiana-Starke', b'Indiana-Starke'), (b'US/Michigan', b'Michigan'), (b'US/Mountain', b'Mountain'), (b'US/Pacific', b'Pacific'), (b'US/Pacific-New', b'Pacific-New'), (b'US/Samoa', b'Samoa')])], default=b'America/Toronto', help_text='', max_length=50, verbose_name='location'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(help_text='', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user associated'),
        ),
        migrations.AlterField(
            model_name='profile',
            name='user_script',
            field=models.TextField(blank=True, default=b'', help_text='User-defined JavaScript for site customization.', max_length=65536, verbose_name='user script'),
        ),
        migrations.AlterField(
            model_name='rating',
            name='contest',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='judge.Contest', verbose_name='contest'),
        ),
        migrations.AlterField(
            model_name='rating',
            name='last_rated',
            field=models.DateTimeField(db_index=True, help_text='', verbose_name='last rated'),
        ),
        migrations.AlterField(
            model_name='rating',
            name='participation',
            field=models.OneToOneField(help_text='', on_delete=django.db.models.deletion.CASCADE, related_name='rating', to='judge.ContestParticipation', verbose_name='participation'),
        ),
        migrations.AlterField(
            model_name='rating',
            name='rank',
            field=models.IntegerField(help_text='', verbose_name='rank'),
        ),
        migrations.AlterField(
            model_name='rating',
            name='rating',
            field=models.IntegerField(help_text='', verbose_name='rating'),
        ),
        migrations.AlterField(
            model_name='rating',
            name='user',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='judge.Profile', verbose_name='user'),
        ),
        migrations.AlterField(
            model_name='rating',
            name='volatility',
            field=models.IntegerField(help_text='', verbose_name='volatility'),
        ),
        migrations.AlterField(
            model_name='solution',
            name='problem',
            field=models.ForeignKey(blank=True, help_text='', null=True, on_delete=django.db.models.deletion.SET_NULL, to='judge.Problem', verbose_name='associated problem'),
        ),
        migrations.AlterField(
            model_name='submission',
            name='batch',
            field=models.BooleanField(default=False, help_text='', verbose_name='batched cases'),
        ),
        migrations.AlterField(
            model_name='submission',
            name='case_points',
            field=models.FloatField(default=0, help_text='', verbose_name='test case points'),
        ),
        migrations.AlterField(
            model_name='submission',
            name='case_total',
            field=models.FloatField(default=0, help_text='', verbose_name='test case total points'),
        ),
        migrations.AlterField(
            model_name='submission',
            name='date',
            field=models.DateTimeField(auto_now_add=True, help_text='', verbose_name='submission time'),
        ),
        migrations.AlterField(
            model_name='submission',
            name='error',
            field=models.TextField(blank=True, help_text='', null=True, verbose_name='compile Errors'),
        ),
        migrations.AlterField(
            model_name='submission',
            name='is_being_rejudged',
            field=models.BooleanField(default=False, help_text='', verbose_name='is being rejudged by admin'),
        ),
        migrations.AlterField(
            model_name='submission',
            name='judged_on',
            field=models.ForeignKey(blank=True, help_text='', null=True, on_delete=django.db.models.deletion.SET_NULL, to='judge.Judge', verbose_name='judged on'),
        ),
        migrations.AlterField(
            model_name='submission',
            name='language',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.CASCADE, to='judge.Language', verbose_name='submission language'),
        ),
        migrations.AlterField(
            model_name='submission',
            name='memory',
            field=models.FloatField(help_text='', null=True, verbose_name='memory usage'),
        ),
        migrations.AlterField(
            model_name='submission',
            name='points',
            field=models.FloatField(db_index=True, help_text='', null=True, verbose_name='points granted'),
        ),
        migrations.AlterField(
            model_name='submission',
            name='source',
            field=models.TextField(help_text='', max_length=65536, verbose_name='source code'),
        ),
        migrations.AlterField(
            model_name='submission',
            name='time',
            field=models.FloatField(db_index=True, help_text='', null=True, verbose_name='execution time'),
        ),
        migrations.AlterField(
            model_name='submissiontestcase',
            name='batch',
            field=models.IntegerField(help_text='', null=True, verbose_name='batch number'),
        ),
        migrations.AlterField(
            model_name='submissiontestcase',
            name='case',
            field=models.IntegerField(help_text='', verbose_name='test case ID'),
        ),
        migrations.AlterField(
            model_name='submissiontestcase',
            name='feedback',
            field=models.CharField(blank=True, help_text='', max_length=50, verbose_name='judging feedback'),
        ),
        migrations.AlterField(
            model_name='submissiontestcase',
            name='memory',
            field=models.FloatField(help_text='', null=True, verbose_name='memory usage'),
        ),
        migrations.AlterField(
            model_name='submissiontestcase',
            name='output',
            field=models.TextField(blank=True, help_text='', verbose_name='program output'),
        ),
        migrations.AlterField(
            model_name='submissiontestcase',
            name='points',
            field=models.FloatField(help_text='', null=True, verbose_name='points granted'),
        ),
        migrations.AlterField(
            model_name='submissiontestcase',
            name='status',
            field=models.CharField(choices=[(b'AC', 'Accepted'), (b'WA', 'Wrong Answer'), (b'TLE', 'Time Limit Exceeded'), (b'MLE', 'Memory Limit Exceeded'), (b'OLE', 'Output Limit Exceeded'), (b'IR', 'Invalid Return'), (b'RTE', 'Runtime Error'), (b'CE', 'Compile Error'), (b'IE', 'Internal Error'), (b'SC', 'Short circuit'), (b'AB', 'Aborted')], help_text='', max_length=3, verbose_name='status flag'),
        ),
        migrations.AlterField(
            model_name='submissiontestcase',
            name='submission',
            field=models.ForeignKey(help_text='', on_delete=django.db.models.deletion.CASCADE, related_name='test_cases', to='judge.Submission', verbose_name='associated submission'),
        ),
        migrations.AlterField(
            model_name='submissiontestcase',
            name='time',
            field=models.FloatField(help_text='', null=True, verbose_name='execution time'),
        ),
        migrations.AlterField(
            model_name='submissiontestcase',
            name='total',
            field=models.FloatField(help_text='', null=True, verbose_name='points possible'),
        ),
    ]
